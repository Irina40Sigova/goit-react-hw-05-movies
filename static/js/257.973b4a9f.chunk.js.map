{"version":3,"file":"static/js/257.973b4a9f.chunk.js","mappings":"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","sources":["components/services/fetchApi.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function getTrendings() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=071a2d124997c654d1633ece03b76917'\n  );\n\n  return response.data;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=071a2d124997c654d1633ece03b76917&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=071a2d124997c654d1633ece03b76917&language=en-US`\n  );\n  return response.data;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=071a2d124997c654d1633ece03b76917&language=en-US`\n  );\n  return response.data;\n}\n\nasync function getReviews(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=071a2d124997c654d1633ece03b76917&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport {\n  getTrendings,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getReviews,\n};\n","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px 24px;\n`;\n\nexport const Back = styled(Link)`\n  display: inline-block;\n  width: 150px;\n  height: 22px;\n  padding: 8px;\n  margin-right: 8px;\n  font-size: 20px;\n  border-radius: 4px;\n  background-color: lightgray;\n  color: black;\n  text-decoration: none;\n  text-transform: uppercase;\n  text-align: center;\n`;\nexport const Box = styled.div`\n  display: flex;\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;\nexport const Info = styled.div`\n  padding: 20px 40px;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  gap: 16px;\n`;\nexport const Text = styled.p`\n  font-family: Verdana, Arial, Helvetica, sans-serif;\n  font-size: 24px;\n`;\nexport const Score = styled.h3`\n  font-size: 30px;\n  color: red;\n`;\nexport const InfoList = styled(NavLink)`\n  display: inline-block;\n  margin-top: 10px;\n  text-decoration: none;\n  color: black;\n  background-color: #febe10;\n  padding: 16px 40px;\n  font-size: 24px;\n  border-radius: 4px;\n  &.active {\n    color: white;\n    background-color: #ff894c;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { getMovieDetails } from 'components/services/fetchApi';\nimport {\n  Container,\n  Back,\n  Box,\n  Info,\n  Text,\n  Score,\n  InfoList,\n  List,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId)\n      .then(response => {\n        setMovieDetails(response);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  const { original_title, overview, genres, poster_path, vote_average } =\n    movieDetails;\n  const score = vote_average * 10;\n  const scoreToFixed = score.toFixed(2);\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : `http://www.suryalaya.org/images/no_image.jpg`;\n\n  const genresList = genres?.map(({ name }) => name).join(', ');\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <Container>\n      <Back to={backLinkHref}> â¬… Go back </Back>\n\n      {isLoading && <div>LOADING ...</div>}\n      <Box>\n        <img\n          src={poster}\n          width={320}\n          height={380}\n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n        <Info>\n          <h2>{original_title}</h2>\n          <Score>User score: {scoreToFixed}%</Score>\n          <h3>Overview</h3>\n          <Text>{overview} </Text>\n          <h3>Genres</h3>\n          <Text>{genresList}</Text>\n        </Info>\n      </Box>\n\n      <Text>Additional information</Text>\n      <List>\n        <InfoList to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </InfoList>\n\n        <InfoList to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </InfoList>\n      </List>\n\n      <Outlet />\n    </Container>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieDetails: propTypes.shape({\n    original_title: propTypes.string.isRequired,\n    overview: propTypes.string,\n    genres: propTypes.arrayOf(propTypes.object),\n    poster_path: propTypes.string,\n    vote_average: propTypes.number.isRequired,\n  }),\n};\n\nexport default MovieDetails;\n"],"names":["getTrendings","axios","response","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Container","styled","Back","Link","Box","Info","List","Text","Score","InfoList","NavLink","movieId","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","location","useLocation","useEffect","then","catch","error","console","log","finally","original_title","overview","genres","poster_path","scoreToFixed","vote_average","toFixed","poster","genresList","map","name","join","backLinkHref","state","from","to","src","width","height","loading","alt"],"sourceRoot":""}