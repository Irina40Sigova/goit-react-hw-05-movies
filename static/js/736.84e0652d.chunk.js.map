{"version":3,"file":"static/js/736.84e0652d.chunk.js","mappings":"qPAEaA,EAAWC,EAAAA,GAAAA,GAAH,iGAMRC,EAAWD,EAAAA,GAAAA,GAAH,qEAIRE,EAAOF,EAAAA,GAAAA,GAAH,0CAGJG,EAAYH,EAAAA,GAAAA,EAAH,wJ,SC6BtB,EAvCa,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAYM,EAAKC,KAClB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,KAGF,SAACR,EAAD,UACGM,EAASa,OAAS,EACfb,EAASc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,UAACtB,EAAD,YACE,gBACEuB,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,SAAC1B,EAAD,UAAOmB,KACP,SAAClB,EAAD,UAAYoB,MAbCH,EADJ,IAiBb,kCAGT,C,wMCxCcS,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IACrB,4FAFJ,cACQC,EADR,yBAKSA,EAASnB,MALlB,2EAQeoB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBH,EAAAA,EAAAA,IAAA,kHACsFG,EADtF,gCADzB,cACQF,EADR,yBAISA,EAASnB,MAJlB,2EAOesB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+Bd,GAA/B,uFACyBU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,6DADzB,cACQW,EADR,yBAISA,EAASnB,MAJlB,2EAOeF,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BU,GAA/B,uFACyBU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,sEADzB,cACQW,EADR,yBAISA,EAASnB,MAJlB,2EAOeuB,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0Bf,GAA1B,uFACyBU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,6EADzB,cACQW,EADR,yBAISA,EAASnB,MAJlB,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n`;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  font-family: 'Times New Roman', Georgia, Serif;\n  font-style: italic;\n  font-size: large;\n  color: #800080;\n  margin: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'components/services/fetchApi';\nimport { CastList, CastItem, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(data => {\n        setCastList(data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {castList.length > 0\n        ? castList.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={150}\n                height={200}\n              />\n              <Name>{name}</Name>\n              <Character>{character}</Character>\n            </CastItem>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nasync function getTrendings() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=071a2d124997c654d1633ece03b76917'\n  );\n\n  return response.data;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=071a2d124997c654d1633ece03b76917&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=071a2d124997c654d1633ece03b76917&language=en-US`\n  );\n  return response.data;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=071a2d124997c654d1633ece03b76917&language=en-US`\n  );\n  return response.data;\n}\n\nasync function getReviews(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=071a2d124997c654d1633ece03b76917&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport {\n  getTrendings,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getReviews,\n};\n\n// https://api.themoviedb.org/3/movie/day?api_key=071a2d124997c654d1633ece03b76917\n// 071a2d124997c654d1633ece03b76917 ключ\n"],"names":["CastList","styled","CastItem","Name","Character","useState","castList","setCastList","movieId","useParams","useEffect","getMovieCredits","then","data","cast","catch","error","console","log","length","map","id","name","profile_path","character","src","alt","loading","width","height","getTrendings","axios","response","getSearchMovies","query","getMovieDetails","getReviews"],"sourceRoot":""}